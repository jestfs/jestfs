async function * x ( ) { } [ { } ] = { [ Symbol . iterator ] : x } ; 
for ( let { } of [ , ] ) ;
for ( var { } of function * x ( ) { yield ; } ( ) ) ; 
let x ; var { 0 : { } = x } = 0 ; 
let { } = '' . x ;
let { } = '' [ 0 % 0 ] ; 
let { } = '' [ 0 ] ; 
let { } = 0n . x ; 
let { } = [ ] . x ;
let { } = `` . x ; 
let { } = true . x ; 
let { } = { get 0 ( ) { return ; } , } [ 0 ] ; 
let { } = { get 0 ( ) { } , } [ 0 ] ; 
let { } = { set 0 ( x ) { } , } [ 0 ] ;
let { } = { set 0 ( x ) { } } [ 0 ] ; 
let { } = { } . x ; 
new function ( x , { } = x ) { } ;
new function ( { } ) { } ; 
var [ x , { } ] = '' ;
var [ { } , , ] = '' ;
var x ; var { 0 : { } = x } = 0 ; 
var { 0 : { } = `` . x } = 0 ; 
var { } = '' . x ;
